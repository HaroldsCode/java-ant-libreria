/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package libreria.vista;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import libreria.constructor.Autor;
import libreria.constructor.Editorial;
import libreria.constructor.Producto;
import libreria.persistencia.Conexion;

/**
 *
 * @author Harold
 */
public class GestionarInventario extends javax.swing.JPanel {
  
  Conexion con;
  
  DefaultTableModel modeloTabla;
  DefaultComboBoxModel modeloComboAutor;
  DefaultComboBoxModel modeloComboEditorial;
  
  Producto producto;
  
  public GestionarInventario() {    
    con = new Conexion();
    producto = null;
    
    initComponents();
    
    modeloTabla = (DefaultTableModel) tablaLibros.getModel();
    modeloComboAutor = (DefaultComboBoxModel) comboAutor.getModel();
    modeloComboEditorial = (DefaultComboBoxModel) comboEditorial.getModel();
    
    cargarCombos();
    controlBotones();
    cargarTabla();
  }
  
  private void cargarCombos() {
    ArrayList<Autor> listaAutor = new ArrayList<>();
    ArrayList<Editorial> listaEditorial = new ArrayList<>();
    
    listaAutor.addAll( con.autor.listadoAutores() );
    listaEditorial.addAll( con.editorial.listadoEditoriales());
    
    if ( listaAutor.isEmpty() || listaEditorial.isEmpty() )
      JOptionPane.showMessageDialog(this, "Para cear un libro debe haber almenos un autor y una editorial");
    
    for ( Autor autor : listaAutor ) {
      modeloComboAutor.addElement( new Object[] { autor.getNombre() }[0] );
    }
    for ( Editorial editorial : listaEditorial ) {
      modeloComboEditorial.addElement( new Object[] { editorial.getNombre() }[0] );
    }
  }

  private void cargarTabla (){
    for (int i = 0; i < tablaLibros.getRowCount(); i++) {
      modeloTabla.removeRow(i);
      i-=1;
    }
    for ( Producto producto : con.producto.listadoProductos()) {
      modeloTabla.addRow( new Object[] {
        producto.getId(),
        producto.getNombre(),
        producto.getEditorial().getNombre(),
        producto.getAutor().getNombre(),
        producto.getAnho(),
        producto.getCantidad(),
        producto.getPrecio()
      });
    }
  }
  
  private void vaciarCampos(){
    comboAutor.setSelectedIndex(0);
    comboEditorial.setSelectedIndex(0);
    textoCantidad.setText("");
    textoFecha.setText("");
    textoNombre.setText("");
    textoPrecio.setText("");
    
    producto = null;
    
    controlBotones();
  }
  
  private void controlBotones(){
    botonActualizar.setVisible( producto != null );
    botonCancelar.setVisible( producto != null );
    botonEliminar.setVisible( producto != null );
    botonGuardar.setVisible( producto == null );
  }
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    jPanel1 = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    textoNombre = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    comboEditorial = new javax.swing.JComboBox<>();
    comboAutor = new javax.swing.JComboBox<>();
    jLabel4 = new javax.swing.JLabel();
    textoFecha = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    textoCantidad = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    jPanel2 = new javax.swing.JPanel();
    botonCancelar = new javax.swing.JButton();
    botonEliminar = new javax.swing.JButton();
    botonActualizar = new javax.swing.JButton();
    botonGuardar = new javax.swing.JButton();
    textoPrecio = new javax.swing.JTextField();
    jLabel7 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    tablaLibros = new javax.swing.JTable();

    setBackground(new java.awt.Color(246, 246, 246));
    setMaximumSize(new java.awt.Dimension(827, 520));
    setMinimumSize(new java.awt.Dimension(827, 520));
    setPreferredSize(new java.awt.Dimension(827, 520));

    jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText("Inventario de libros");

    jPanel1.setBackground(new java.awt.Color(246, 246, 246));

    jLabel2.setText("Nombre del libro");

    jLabel3.setText("Editorial");

    comboEditorial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione la Editorial" }));

    comboAutor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el autor" }));

    jLabel4.setText("Autor");

    jLabel5.setText("Año de publicación");

    jLabel6.setText("Cantidad");

    jPanel2.setBackground(new java.awt.Color(246, 246, 246));
    jPanel2.setPreferredSize(new java.awt.Dimension(0, 22));
    java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 2);
    flowLayout1.setAlignOnBaseline(true);
    jPanel2.setLayout(flowLayout1);

    botonCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    botonCancelar.setText("Cancelar");
    botonCancelar.setPreferredSize(new java.awt.Dimension(85, 29));
    botonCancelar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        botonCancelarActionPerformed(evt);
      }
    });
    jPanel2.add(botonCancelar);

    botonEliminar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    botonEliminar.setText("Eliminar");
    botonEliminar.setPreferredSize(new java.awt.Dimension(85, 29));
    botonEliminar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        botonEliminarActionPerformed(evt);
      }
    });
    jPanel2.add(botonEliminar);

    botonActualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    botonActualizar.setText("Actualizar");
    botonActualizar.setPreferredSize(new java.awt.Dimension(85, 29));
    botonActualizar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        botonActualizarActionPerformed(evt);
      }
    });
    jPanel2.add(botonActualizar);

    botonGuardar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    botonGuardar.setText("Guardar");
    botonGuardar.setPreferredSize(new java.awt.Dimension(75, 29));
    botonGuardar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        botonGuardarActionPerformed(evt);
      }
    });
    jPanel2.add(botonGuardar);

    jLabel7.setText("Precio");
    jLabel7.setAlignmentY(0.0F);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(textoFecha))
            .addGap(28, 28, 28)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(textoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addComponent(jLabel2)
          .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(comboEditorial, 0, 152, Short.MAX_VALUE)
                .addGap(24, 24, 24))
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel4)
              .addComponent(comboAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(textoCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel6))
            .addContainerGap())))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
            .addGap(20, 20, 20)
            .addComponent(comboEditorial))
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel6)
              .addComponent(jLabel4))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(textoCantidad))
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(comboAutor)))
        .addGap(10, 10, 10)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
              .addComponent(textoFecha)))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel7)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(textoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addGap(11, 11, 11))
    );

    tablaLibros.setAutoCreateRowSorter(true);
    tablaLibros.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Id", "Nombre del libro", "Editorial", "Autor", "Fecha de Publicación", "Cantidad", "Precio"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
      };
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false, false
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tablaLibros.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    tablaLibros.getTableHeader().setReorderingAllowed(false);
    tablaLibros.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        tablaLibrosMouseClicked(evt);
      }
    });
    jScrollPane1.setViewportView(tablaLibros);
    if (tablaLibros.getColumnModel().getColumnCount() > 0) {
      tablaLibros.getColumnModel().getColumn(0).setResizable(false);
      tablaLibros.getColumnModel().getColumn(0).setPreferredWidth(10);
      tablaLibros.getColumnModel().getColumn(1).setResizable(false);
      tablaLibros.getColumnModel().getColumn(1).setPreferredWidth(210);
      tablaLibros.getColumnModel().getColumn(2).setResizable(false);
      tablaLibros.getColumnModel().getColumn(2).setPreferredWidth(50);
      tablaLibros.getColumnModel().getColumn(3).setResizable(false);
      tablaLibros.getColumnModel().getColumn(3).setPreferredWidth(50);
      tablaLibros.getColumnModel().getColumn(4).setResizable(false);
      tablaLibros.getColumnModel().getColumn(4).setPreferredWidth(80);
      tablaLibros.getColumnModel().getColumn(5).setResizable(false);
      tablaLibros.getColumnModel().getColumn(5).setPreferredWidth(10);
      tablaLibros.getColumnModel().getColumn(6).setResizable(false);
      tablaLibros.getColumnModel().getColumn(6).setPreferredWidth(50);
    }

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jScrollPane1)
          .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(5, 5, 5)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
    try {
      
      if ( textoNombre.getText().trim().length() == 0 ) {
        JOptionPane.showMessageDialog(this, "Hay campos vacios");
        return;
      }
      
      if ( comboAutor.getSelectedItem().equals("Seleccione el autor") || comboEditorial.getSelectedItem().equals("Seleccione el autor") ) {
        JOptionPane.showMessageDialog(this, "Debe seleccionar una opción");
        return;
      }
      
      int anho = Integer.parseInt(textoFecha.getText().trim()), cantidad = Integer.parseInt(textoCantidad.getText().trim());
      double precio = Double.parseDouble( textoPrecio.getText().trim() );
      
      if ( anho < 0 || cantidad < 0 || precio < 0 ) throw new NumberFormatException();
      
      Producto temporal = new Producto();
      temporal.setNombre( textoNombre.getText().trim() );
      temporal.setAutor( con.autor.consultarAutorPorNombre( (String) comboAutor.getSelectedItem() ) );
      temporal.setEditorial( con.editorial.consultarEditorialPorNombre( (String) comboEditorial.getSelectedItem() ) );
      temporal.setCantidad( cantidad );
      temporal.setAnho( ""+anho );
      temporal.setPrecio( precio );
      
      con.producto.guardarProducto(temporal);
      
      vaciarCampos();
      cargarTabla();
    } catch ( NumberFormatException e ) {
      JOptionPane.showMessageDialog(this, "El año de publicación, el precio y la cantidad deben ser números positivos");
    }
    
  }//GEN-LAST:event_botonGuardarActionPerformed

  private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
    try {
      
      if ( textoNombre.getText().trim().length() == 0 || textoCantidad.getText().trim().length() == 0 || textoFecha.getText().trim().length() == 0 ) {
        JOptionPane.showMessageDialog(this, "Hay campos vacios");
        return;
      }
      
      if ( comboAutor.getSelectedItem().equals("Seleccione el autor") || comboEditorial.getSelectedItem().equals("Seleccione el autor") ) {
        JOptionPane.showMessageDialog(this, "Debe seleccionar una opción");
        return;
      }
      
      int anho = Integer.parseInt(textoFecha.getText().trim()), cantidad = Integer.parseInt(textoCantidad.getText().trim());
      double precio = Double.parseDouble( textoPrecio.getText().trim() );
      
       if ( anho < 0 || cantidad < 0 || precio < 0 ) throw new NumberFormatException();
      
      con.producto.actualizarProducto( new Producto(
        producto.getId(),
        con.editorial.consultarEditorialPorNombre( (String) comboEditorial.getSelectedItem() ),
        con.autor.consultarAutorPorNombre( (String) comboAutor.getSelectedItem() ),
        textoNombre.getText().trim(),
        ""+anho,
        cantidad,
        precio
      ));
      producto = null;
      vaciarCampos();
      cargarTabla();
    } catch ( NumberFormatException e ) {
      JOptionPane.showMessageDialog(this, "El año de publicación, el precio y la cantidad deben ser números positivos");
    }
  }//GEN-LAST:event_botonActualizarActionPerformed

  private void tablaLibrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaLibrosMouseClicked
    int id = (int) modeloTabla.getValueAt(tablaLibros.getSelectedRow(), 0);
    Producto temporal = con.producto.consultarProductoPorId(id);
    producto = new Producto(
      temporal.getId(),
      temporal.getEditorial(),
      temporal.getAutor(),
      temporal.getNombre(),
      temporal.getAnho(),
      temporal.getCantidad(),
      temporal.getPrecio()
    );
    
    comboAutor.setSelectedItem( producto.getAutor().getNombre() );
    comboEditorial.setSelectedItem( producto.getEditorial().getNombre() );
    textoCantidad.setText( ""+producto.getCantidad() );
    textoFecha.setText( producto.getAnho() );
    textoNombre.setText( producto.getNombre() );
    textoPrecio.setText( ""+producto.getPrecio());
    
    controlBotones();
  }//GEN-LAST:event_tablaLibrosMouseClicked

  private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
    producto = null;
      
    comboAutor.setSelectedIndex(0);
    comboEditorial.setSelectedIndex(0);
    textoCantidad.setText("0");
    textoFecha.setText("0");
    textoNombre.setText("");
    textoPrecio.setText("0");

    controlBotones();
    cargarTabla();
    
  }//GEN-LAST:event_botonCancelarActionPerformed

  private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
    if ( JOptionPane.showConfirmDialog(this, "¿Está seguro de borrar el producto?", "", JOptionPane.YES_NO_OPTION) == 0 ) {
      con.producto.eliminarProducto( producto.getId() );
      vaciarCampos();
      cargarTabla();
    }
  }//GEN-LAST:event_botonEliminarActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton botonActualizar;
  private javax.swing.JButton botonCancelar;
  private javax.swing.JButton botonEliminar;
  private javax.swing.JButton botonGuardar;
  private javax.swing.JComboBox<String> comboAutor;
  private javax.swing.JComboBox<String> comboEditorial;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable tablaLibros;
  private javax.swing.JTextField textoCantidad;
  private javax.swing.JTextField textoFecha;
  private javax.swing.JTextField textoNombre;
  private javax.swing.JTextField textoPrecio;
  // End of variables declaration//GEN-END:variables
}
